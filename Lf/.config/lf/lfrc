#    __   ____
#   / /  / __/
#  / /__/ _/  
# /____/_/    


##################
### Enviroment ###
##################

set shell bash
set shellopts '-eu'
set ifs "\n"

%mkdir -p ~/.trash


##############
### Images ###
##############

set sixel true
set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id


#####################
### Customization ###
#####################

set icons
set scrolloff 8
set cursorpreviewfmt ""


################
### Commands ###
################

cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f -d $( basename --suffix=.zip $f );;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd delete ${{
    set -f
    printf "\n$fx"
    printf "\n :: Delete? [y/n]"
    read -p ": " -n 1 -r ans
    [ "$ans" = "y" ] && rm -rf $fx
    printf "\n"
}}

cmd trash %set -f; mv -t ~/.trash $fx


################
### Bindings ###
################

map <enter> shell
map ` !true

map x $$f
map X !$f

map o &mimeopen $f
map O $mimeopen --ask $f

map A :push %mkdir<space>
map a :push %touch<space>

map B :push %mkdir<space>$(date<space>"+%Y_%m_%d")_
map b :push %touch<space>$(date<space>"+%Y_%m_%d").

map <delete> trash
map <s-delete> delete

map u $udiskie-umount --detach $f

map gt cd ~/.trash/
map gc cd ~/.config/
map gl cd ~/.local/
map ge cd /run/media/


