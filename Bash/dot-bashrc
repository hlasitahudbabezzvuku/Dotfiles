#      __            __          
#     / /  ___ ____ / /  ________
#  _ / _ \/ _ `(_-</ _ \/ __/ __/
# (_)_.__/\_,_/___/_//_/_/  \__/ 


# General modules
readonly BASHRC_SESSION=true # Enable session integration (needed for most other modules)
readonly BASHRC_BELORA=true  # Enable automatic tmux sessions via Belora (https://github.com/hlasitahudbabezzvuku/Belora)
readonly BASHRC_BLESH=true   # Enable ble.sh integration


# If not running interactively, don't do anything
[[ $- != *i* ]] && return


################
### Sourcing ###
################

if [[ -f /etc/bashrc ]]; then
    source /etc/bashrc
elif [[ -f /etc/bash.bashrc ]]; then
    source /etc/bash.bashrc
fi


##################
### Enviroment ###
##################

for dir in "${HOME}"/Applications/*; do
    if ! [[ "${PATH}" =~ "${dir}" ]] && [[ -d "${dir}" ]]; then
        PATH="${dir}:${PATH}"
    fi
done

for dir in "$HOME"/.sdk/*/bin/; do
    if ! [[ "${PATH}" =~ "${dir}" ]] && [[ -d "${dir}" ]]; then
        PATH="${dir}:${PATH}"
    fi
done

if ! [[ "${PATH}" =~ "${HOME}/.local/bin" ]]; then
    PATH="${HOME}/.local/bin:${PATH}"
fi

if ! [[ "${PATH}" =~ "${HOME}/bin" ]]; then
    PATH="${HOME}/bin:${PATH}"
fi

export PATH


#####################
### Runtime Check ###
#####################

if [[ ! "${BASH_VERSINFO[0]}" -ge 5 ]]; then
    printf "[ERROR]: This script need BASH version 5 at least. This version is %i\n" "${BASH_VERSINFO[0]}" 1>&2
    exec bash --norc --noprofile
fi

declare -a software_required=(
    "bash"
    "kill" # util-linux
    "shuf" # coreutils
)

for entry in "${software_required[@]}"; do
    if ! type "${entry}" &> /dev/null; then
        printf "[ERROR]: Could not find \"%s\"\n" "${entry}" 1>&2
        exec bash --norc --noprofile
    fi
done

unset software_required


###############
### Updates ###
###############

if ${BASHRC_BLESH} && ${BASHRC_SESSION} && [[ ${XDG_SESSION_TYPE} != "wayland" ]] && [[ -z ${_bashrc_first_login+x} ]]; then
    ( bash "$HOME"/.local/share/blesh/ble.sh --update )
fi


#############
### Login ###
#############

[[ ${BASHRC_SESSION} ]] && [[ -z ${_bashrc_first_login+x} ]] && export _bashrc_first_login=false


####################
### Tmux Session ###
####################

if "${BASHRC_BELORA}" && type belora &> /dev/null && { [[ -n "${SSH_CONNECTION}" ]] || [[ "${XDG_SESSION_TYPE}" == "web" ]]; }; then
    belora && exit
fi


##############
### ble.sh ###
##############

if ${BASHRC_BLESH}; then
    if [[ -f $HOME/.local/share/blesh/ble.sh ]]; then
        source "$HOME"/.local/share/blesh/ble.sh
    else
        (
            if [[ ! -d "/tmp/bashrc" ]]; then
                mkdir -p "/tmp/bashrc"
            fi

            pushd "/tmp/bashrc" || exit

            git clone --recursive https://github.com/akinomyoga/ble.sh.git && \
                pushd ble.sh && \
                make && \
                make install && \
                popd

            popd && rm -rf "/tmp/bashrc/ble.sh"
        )
    fi
fi


###########################
### Addinational Config ###
###########################

if [[ -d "${HOME}"/.config/bash ]]; then
    for file in "${HOME}"/.config/bash/*.sh; do
        if [ -f "${file}" ]; then
            source "${file}"
        fi
    done
fi

